{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","currentTarget","value","setState","handleSubmit","event","preventDefault","props","onSubmit","reset","className","s","form","this","title","input","type","onChange","button","Component","Contacts","contacts","onDeleteContact","list","map","id","listItem","num","onClick","Filter","App","filter","handleFilterChange","formSubmitHandler","data","contact","toLocaleLowerCase","includes","alert","shortId","generate","prevState","getVisibleContacts","normalizedFilter","deleteContact","contactId","localStorage","getItem","setItem","JSON","stringify","parse","visibleContacts","ContactList","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.a9182b5b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ currentTarget: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.title}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.title}>\n          Number\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n// import PropTypes from 'prop-types'\n\nclass Contacts extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n      }),\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    return (\n      <Fragment>\n        <ul className={s.list}>\n          {contacts.map(({ id, name, number }) => {\n            return (\n              <li key={id} className={s.listItem}>\n                <span className={s.name}>{name}:</span>\n                <span className={s.num}>{number}</span>\n                <button\n                  className={s.button}\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </Fragment>\n    );\n  }\n}\n\nexport default Contacts;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  static propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n  };\n  handleChange = ({ currentTarget: { value } }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value } = this.props;\n    return <input type=\"text\" value={value} onChange={this.handleChange} />;\n  }\n}\n\nexport default Filter;\n","import { Component, Fragment } from 'react';\nimport shortId from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    if (!localStorage.getItem('phonebookContacts')) {\n      localStorage.setItem(\n        'phonebookContacts',\n        JSON.stringify(this.state.contacts),\n      );\n    }\n    this.setState({\n      contacts: JSON.parse(localStorage.getItem('phonebookContacts')),\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      'phonebookContacts',\n      JSON.stringify(this.state.contacts),\n    );\n  }\n\n  handleFilterChange = value => {\n    this.setState({ filter: value });\n  };\n\n  formSubmitHandler = data => {\n    const allNames = this.state.contacts.map(contact =>\n      contact.name.toLocaleLowerCase(),\n    );\n    if (allNames.includes(data.name.toLocaleLowerCase())) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n    const contact = {\n      id: shortId.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n\n    return this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Fragment>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__99YKz\",\"title\":\"ContactForm_title__1etnW\",\"input\":\"ContactForm_input__1UfXT\",\"button\":\"ContactForm_button__15T4C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T93Q\",\"listItem\":\"ContactList_listItem__2r1QI\",\"name\":\"ContactList_name__3uY16\",\"num\":\"ContactList_num__3JdM6\",\"button\":\"ContactList_button__87Lek\"};"],"sourceRoot":""}